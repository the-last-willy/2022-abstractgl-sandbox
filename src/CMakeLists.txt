################################################################################
################################################################################
################################################################################
# Dependencies.

################################################################################
# Conan.

include(${CMAKE_BINARY_DIR}/conanbuildinfo.cmake)
conan_basic_setup()

################################################################################
# Packages.

find_package(api_opengl REQUIRED)
find_package(tinyobjloader REQUIRED)

################################################################################
# Libraries.

################################################################################
################################################################################
################################################################################
# Hardcoded configuration badness.

if(MSVC)
    add_compile_options(/std:c++latest /W4)
elseif()
    add_compile_options(/std=c++20 /Wall)
endif()

################################################################################
################################################################################
################################################################################
# Libraries.

################################################################################
# Common.

add_library(common INTERFACE)

target_include_directories(common
    INTERFACE
        src
)

################################################################################
# All.

add_library(all_libraries INTERFACE)

target_link_libraries(all_libraries
    INTERFACE
        ${CONAN_LIBS}

        abstractgl::api_opengl
        tinyobjloader::tinyobjloader
        glad
)

################################################################################
################################################################################
################################################################################
# Executables.

add_executable(test)

target_link_libraries(test
    PRIVATE
        all_libraries
        common
)

target_sources(test
    PRIVATE
        main.cpp
)
